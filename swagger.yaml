openapi: 3.0.0
info:
  title: Job_api
  description: An API where registered user can post new jobs and manage how the jobs flow. User can create, update, delete, and view jobs with our the API token given to the user. Unregistered users can search for available jobs and view the jobs details.
  contact:
    name: Yusuf
    url: https://www.linkedin.com/in/yusuf-sholadoye-7468081a3/
    email: stridestek@gmail.com
  version: '1.0'
  x-codegen-settings:
    Nullify404: false
    GenerateAsyncCode: true
    UseMethodPrefix: false
    UseModelPostfix: false
    UseControllerPrefix: true
    UseEnumPostfix: true
    CollectParameters: false
    UseConstructorsForConfig: false
    UseCommonSDKLibrary: false
    iOSUseAppInfoPlist: false
    AndroidUseAppManifest: false
    BodySerialization: 0
    EnableAdditionalModelProperties: false
    PreserveParameterOrder: true
    AppendContentHeaders: true
    iOSGenerateCoreData: false
    GenerateInterfaces: false
    NodeHttpClient: NODE_REQUEST
    ValidateRequiredParameters: false
    JavaUsePropertiesConfig: false
    Timeout: 0
    StoreTimezoneInformation: false
    EnablePHPComposerVersionString: false
    EnableLogging: false
    ArraySerialization: Indexed
    ModelSerializationScheme: Json
    UseExceptionPrefix: true
    RunscopeEnabled: false
    AndroidHttpClient: ANDROID_OK
    ObjCHttpClient: UNIREST
    CSharpHttpClient: UNIREST
    PHPHttpClient: UNIREST
    JavaHttpClient: JAVA_OK
    ParameterArrayFormat: ParamArrayWithIndex
    SecurityProtocols:
    - Ssl3
    - Tls
    GenerateTravisConfig: false
    GenerateCircleConfig: false
    GenerateAppveyorConfig: false
    GenerateJenkinsConfig: false
    EnableHttpCache: false
    Retries: 0
    RetryInterval: 1
    GenerateAdvancedDocs: true
    UnderscoreNumbers: true
    UseSingletonPattern: true
    DisableLinting: false
    ApplyCustomizations: []
    SortResources: false
    AllowSkippingSSLCertVerification: false
    DoNotSplitWords: []
    EnableGlobalUserAgent: true
    ReturnCompleteHttpResponse: false
    GenerateModels: true
    GenerateExceptions: true
    IgnoreIfNullJson: false
    DisableDocs: false
    LiftParameterDescriptionFromCustomType: false
    ThrowForHttpErrorStatusCodes: true
    ResponseMapping:
      Type: Simple
    ForceKeywordArgsInRuby: false
    SymbolizeHashKeysInRuby: false
    UsageExampleEndpoint:
      Description: ''
      EndpointGroupName: ''
      EndpointName: ''
    IsLatestVersion: false
    EnableImmutableModels: false
    GenerateEnums: true
    BackoffFactor: 2
    StatusCodesToRetry:
    - 408
    - 413
    - 429
    - 500
    - 502
    - 503
    - 504
    - 521
    - 522
    - 524
    RequestMethodsToRetry:
    - GET
    - PUT
    UserConfigurableRetries: true
    UseEndpointMethodName: false
    EncodeTemplateParameters: true
    GenerateExamplesForOptionalFields: false
    MultitargetDotnetVersions: false
    BackoffMax: 0
    RetryOnTimeout: true
    EnableCookies: false
    EnableJsonPassThroughForAny: false
  x-server-configuration:
    default-environment: production
    default-server: Server 1
    environments:
    - name: production
      servers:
      - name: Server 1
        url: https://localhost:8080/api/v1
    parameters: []
  x-image-uri: ''
servers:
- url: https://localhost:8080/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: Register
      description: Employer users can use this endpoint to register their account in order to get an access token
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              username: yusuf
              email: yusuforiade1616@gmail.com
              password: Apiv1@api
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: POST
          uri: /auth/register
          headers:
            Content-Type: application/json
          body: >-
            {

              "username": "yusuf",

              "email": "yusuforiade1616@gmail.com",

              "password": "Apiv1@api"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: Register
  /auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: Employer users can use this endpoint to login their account in order to retrieve an access token
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              email: yusuforiade1616@gmail.com
              password: Apiv1@api
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: POST
          uri: /auth/login
          headers:
            Content-Type: application/json
          body: >-
            {

              "email": "yusuforiade1616@gmail.com",

              "password": "Apiv1@api"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: Login
  /job:
    post:
      tags:
      - job
      summary: createJob
      description: Registered Users can use this endpoint to create/post new jobs
      operationId: createJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createJobRequest'
            example:
              title: Frontend developer
              description: Use frameworks like ReactJs, Vuejs and Angular to design and manage our website frontend
              status: Pending
              company: Nilla
              location: Remote
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: POST
          uri: /job
          headers:
            Content-Type: application/json
          body: >-
            {

              "title": "Frontend developer",

              "description": "Use frameworks like ReactJs, Vuejs and Angular to design and manage our website frontend",

              "status": "Pending",

              "company": "Nilla",

              "location": "Remote"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: createJob
    get:
      tags:
      - job
      summary: getAllJobs
      description: Job owners can view all the list of jobs posted
      operationId: getAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: GET
          uri: /job
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: getAllJobs
  /job/627ad835245e60667b64370e:
    patch:
      tags:
      - job
      summary: updateJob
      description: Registered users can use this endpoint to update existing jobs
      operationId: updateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateJobRequest'
            example:
              title: Backend developer
              description: Developing and designing of api, database, and other backend systems for our company websites
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: PATCH
          uri: /job/627ad835245e60667b64370e
          headers:
            Content-Type: application/json
          body: >-
            {

              "title": "Backend developer",

              "description": "Developing and designing of api, database, and other backend systems for our company websites"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: updateJob
    delete:
      tags:
      - job
      summary: deleteJob
      description: Job owner/poster can delete a job with this endpoint
      operationId: deleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: DELETE
          uri: /job/627ad835245e60667b64370e
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: deleteJob
  /job/628312ef2e11e4a3a16493f4:
    get:
      tags:
      - job
      summary: getJob
      description: Registered owner of a job  can use this endpoint to get a detailed information about the job using the id of the job
      operationId: getJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: GET
          uri: /job/628312ef2e11e4a3a16493f4
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: getJob
  /search_job:
    get:
      tags:
      - search_job
      summary: searchJob
      description: Common users/ job searchers can use this endpoint to search for available jobs with filtering capacity based on his/her need
      operationId: searchJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: GET
          uri: /search_job
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: searchJob
  /:
    get:
      tags:
      - search_job
      summary: searchSingleJob
      description: Job searchers can use this endpoint to get the restricted detailed information of a single job with the job ID
      operationId: searchSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      x-unitTests:
      - request:
          method: GET
          uri: /
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          statusCode: '200'
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: searchSingleJob
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - username
      - email
      - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: yusuf
        email: yusuforiade1616@gmail.com
        password: Apiv1@api
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: yusuforiade1616@gmail.com
        password: Apiv1@api
    createJobRequest:
      title: createJobRequest
      required:
      - title
      - description
      - status
      - company
      - location
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
        company:
          type: string
        location:
          type: string
      example:
        title: Frontend developer
        description: Use frameworks like ReactJs, Vuejs and Angular to design and manage our website frontend
        status: Pending
        company: Nilla
        location: Remote
    updateJobRequest:
      title: updateJobRequest
      required:
      - title
      - description
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: Backend developer
        description: Developing and designing of api, database, and other backend systems for our company websites
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: auth
- name: job
- name: search_job
